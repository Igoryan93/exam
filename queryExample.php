<?php

/* Построитель запросов QueryBuilder включает в себя поделючение к БД и предоставляет работать с методами SELECT, INSERT, UPDATE, DELETE */

require_once "classes/QueryBuilder.php"; // Подключение компонента

/* Пример использования метода выбрать всех и запись их в переменную $allUser, результат вернет объект */
$allUser = QueryBuilder::getInstance()->selectAll('users', ['id', '>', '0']);

/* 1. Выбрать всех или одного пользователя по любому из доступных полей

  а) 'users' - таблица с которой мы хотим работать
  b) 'id'    - название поля в таблицы
  c) '>'     - логический оператор, может использоваться любой из операторов ('>', '<', '>=', '<=', '=').
               Обратите внимение id > 0 выберет всех пользователей у кого id > 0 то есть всех
*/

/* Пример вывода пользователей из таблицы где name и surname название полей принадлежащее каждому пользователю */

/* foreach ($allUser->result() as $user) {
    echo $user->name . " " . $user->surname . "<br>";
} */

/* Результат будет: Jone Doe
                    Jane Coe
                    Paul Jackson */

/* Пример вывода одного пользователя */

/* echo $allUser->first()->name . " " . $allUser->first()->surname; */

/* Результат будет: Jone Doe */






/* Пример использования метода добавить пользователя */

QueryBuilder::getInstance()->insert('users', [
    'name'    => $_POST['name'],
    'surname' => $_POST['surname']
]);

/* Чтобы добавить пользователя необходимо передать название таблицы в примере 'users' с которой мы хотим работать, а данные передаем в массиве где
   'название поле' => 'заначение из формы'. Поля можно передватать неограниченное число */





/* Пример использования метода изменить пользователя */

QueryBuilder::getInstance()->update('users', $_GET['id'], [
    'name'    => $_POST['name'],
    'surname' => $_POST['surname']
]);

/* Чтобы изменить пользователя необходимо передать название таблицы в примере 'users' с которой мы хотим работать, передаем id пользователя и данные в массиве где
   'название поле' => 'заначение из формы'. Поля можно передватать неограниченное число */





/* Пример использования метода удалить пользователя */
QueryBuilder::getInstance()->delete('users', ['id', '=', $_GET['id']]);

/* Чтобы удалить пользователя необходимо передать название таблицы в примере 'users' с которой мы хотим работать, а данные передаем в массиве где
   'название поле в примере id', '=', 'id пользователя'. Удаление можно производить таким же способом как и при выборе пользоватлей,
    тем самы если выбрать id < 10 удалятся все пользователи у которых id равно меньше 10  */
